TYPE THE CODE:

import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";

function MedicalShop() {
const [inventory, setInventory] = useState([
{ id: 1, name: "Paracetamol", quantity: 50, price: 2.5 },
{ id: 2, name: "Aspirin", quantity: 30, price: 3 },
{ id: 3, name: "Band-Aid", quantity: 100, price: 1 },
]);

const [newMedicine, setNewMedicine] = useState({
name: "",
quantity: "",
price: "",
});

const [editingId, setEditingId] = useState(null);

const handleChange = (e) => {
const { name, value } = e.target;
setNewMedicine({ ...newMedicine, [name]: value });
};

const addOrUpdateMedicine = () => {
const { name, quantity, price } = newMedicine;
if (name.trim() === "" || quantity === "" || price === "") {
alert("Please fill in all fields");
return;
}

if (editingId !== null) {
setInventory(
inventory.map((item) =>
item.id === editingId
? {
...item,
name,
quantity: parseInt(quantity, 10),
price: parseFloat(price),
}
: item
)
);
setEditingId(null);
} else {
const newEntry = {
id: Math.max(...inventory.map((item) => item.id), 0) + 1,
name,
quantity: parseInt(quantity, 10),
price: parseFloat(price),
};
setInventory([...inventory, newEntry]);
}

setNewMedicine({ name: "", quantity: "", price: "" });
};

const deleteMedicine = (id) => {
setInventory(inventory.filter((item) => item.id !== id));
};

const editMedicine = (item) => {
setNewMedicine({
name: item.name,
quantity: item.quantity,
price: item.price,
});
setEditingId(item.id);
};
return (
<div className="container my-4">
<h1 className="text-primary mb-4">Medical Shop Inventory</h1>
<table className="table table-striped table-bordered">
<thead className="table-dark">
<tr>
<th>ID</th>
<th>Name</th>
<th>Quantity</th>
<th>Price (?)</th>
<th>Actions</th>
</tr>
</thead>
<tbody>
{inventory.map((item) => (
<tr key={item.id}>
<td>{item.id}</td>
<td>{item.name}</td>
<td>{item.quantity}</td>
<td>{item.price}</td>
<td>
<button
className="btn btn-warning btn-sm me-2"
onClick={() => editMedicine(item)}
>
Edit
</button>
<button
className="btn btn-danger btn-sm"
onClick={() => deleteMedicine(item.id)}
>
Delete
</button>
</td>
</tr>
))}
</tbody>
</table>

<h2 className="text-success mt-4">
{editingId !== null ? "Update Medicine" : "Add New Medicine"}
</h2>
<div className="row g-3 mt-2">
<div className="col-md-4">
<input
type="text"
className="form-control"
placeholder="Name"
name="name"
value={newMedicine.name}
onChange={handleChange}
/>
</div>
<div className="col-md-4">
<input
type="number"
className="form-control"
placeholder="Quantity"
name="quantity"
min="0"
value={newMedicine.quantity}
onChange={handleChange}
/>
</div>
<div className="col-md-4">
<input
type="number"
className="form-control"
placeholder="Price"
name="price"
min="0"
step="0.01"
value={newMedicine.price}
onChange={handleChange}
/>
</div>
<div className="col-12">
<button
className={`btn w-100 ${editingId !== null ? "btn-warning" : "btn-success"}`}
onClick={addOrUpdateMedicine}
>
{editingId !== null ? "Update Medicine" : "Add Medicine"}
</button>
</div>
</div>
</div>
);
}

export default MedicalShop;



FIX THE CODE:

import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

const FoodOrder = () => {
  const [orders, setOrders] = useState([
    { id: 1, item: 'Burger', quantity: 2, price: 150 },
    { id: 2, item: 'Pizza', quantity: 1, price: 300 },
    { id: 3, item: 'Pasta', quantity: 3, price: 200 },
  ]);

  const [newOrder, setNewOrder] = useState({
    item: '',
    quantity: '',
    price: '',
  });

  const handleNewOrderChange = (e) => {
    const { name, value } = e.target;
    setNewOrder({ ...newOrder, [name]: value });
  };

  const handleAddOrder = () => {
    if (!newOrder.item || !newOrder.quantity || !newOrder.price) {
      alert('Please fill in all fields');
      return;
    }

    const newId = orders.length > 0 ? Math.max(...orders.map(order => order.id)) + 1 : 1;

    const orderToAdd = {
      id: newId,
      item: newOrder.item,
      quantity: parseInt(newOrder.quantity),
      price: parseFloat(newOrder.price),
    };

    setOrders([...orders, orderToAdd]);
    setNewOrder({ item: '', quantity: '', price: '' });
  };

  return (
    <div className="container my-4">
      <h1 className="text-primary text-center mb-4">Food Order Management</h1>

      <table className="table table-striped table-bordered">
        <thead>
          <tr>
            <th>ID</th>
            <th>Food Item</th>
            <th>Quantity</th>
            <th>Price ($)</th>
          </tr>
        </thead>
        <tbody>
          {orders.map((order) => (
            <tr key={order.id}>
              <td>{order.id}</td>
              <td>{order.item}</td>
              <td>{order.quantity}</td>
              <td>{order.price}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <hr />

      <h2 className="text-success text-center mt-5 mb-3">Add New Food Order</h2>
      <div className="row g-3">
        <div className="col-md-4">
          <input
            type="text"
            className="form-control"
            placeholder="Food Item"
            name="item"
            value={newOrder.item}
            onChange={handleNewOrderChange}
          />
        </div>
        <div className="col-md-3">
          <input
            type="number"
            className="form-control"
            placeholder="Quantity"
            name="quantity"
            value={newOrder.quantity}
            onChange={handleNewOrderChange}
            min="1"
          />
        </div>
        <div className="col-md-3">
          <input
            type="number"
            className="form-control"
            placeholder="Price ($)"
            name="price"
            value={newOrder.price}
            onChange={handleNewOrderChange}
            step="0.1"
            min="0"
          />
        </div>
        <div className="col-md-2">
          <button
            className="btn btn-success w-100"
            onClick={handleAddOrder}
          >
            Add Order
          </button>
        </div>
      </div>
    </div>
  );
};

export default FoodOrder;



Practice at Home:

import React, { useState } from 'react';

const Bookstore = () => {
    const [inventory, setInventory] = useState([
        { id: 1, title: 'The Great Gatsby', author: 'F. Scott Fitzgerald', stock: 12, price: 10.5 },
        { id: 2, title: '1984', author: 'George Orwell', stock: 8, price: 9.0 },
        { id: 3, title: 'To Kill a Mockingbird', author: 'Harper Lee', stock: 15, price: 12.0 },
    ]);

    const [newBook, setNewBook] = useState({
        title: '',
        author: '',
        stock: '',
        price: '',
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setNewBook({ ...newBook, [name]: value });
    };

    const handleAddBook = () => {
        const { title, author, stock, price } = newBook;

        if (!title || !author || !stock || !price) {
            alert('Please fill in all fields');
            return;
        }

        const newEntry = {
            id: inventory.length + 1,
            title,
            author,
            stock: parseInt(stock, 10),
            price: parseFloat(price),
        };

        setInventory([...inventory, newEntry]);
        setNewBook({ title: '', author: '', stock: '', price: '' });
    };

    return (
        <div className="container my-5">
            <h2 className="text-center text-primary">Bookstore Inventory</h2>
            <p className="text-center text-muted">Manage your book collection with ease</p>

            <h4 className="text-success mt-4">Available Books</h4>
            <div className="row mt-3">
                {inventory.map((book) => (
                    <div key={book.id} className="col-md-4 mb-3">
                        <div className="card h-100 shadow-sm p-3">
                            <h5 className="text-primary">{book.title}</h5>
                            <p className="text-muted">by {book.author}</p>
                            <p><strong>Stock:</strong> {book.stock}</p>
                            <p><strong>Price:</strong> ${book.price.toFixed(2)}</p>
                            <span className="badge bg-info text-dark">ID: {book.id}</span>
                        </div>
                    </div>
                ))}
            </div>
            <h4 className="text-success mt-4">Add a New Book</h4>
            <div className="card p-3 shadow-sm">
                <div className="row g-2">
                    <div className="col-md-3">
                        <input
                            type="text"
                            name="title"
                            value={newBook.title}
                            onChange={handleChange}
                            placeholder="Book Title"
                            className="form-control"
                        />
                    </div>
                    <div className="col-md-3">
                        <input
                            type="text"
                            name="author"
                            value={newBook.author}
                            onChange={handleChange}
                            placeholder="Author"
                            className="form-control"
                        />
                    </div>
                    <div className="col-md-2">
                        <input
                            type="number"
                            name="stock"
                            value={newBook.stock}
                            onChange={handleChange}
                            placeholder="Stock"
                            className="form-control"
                            min="0"
                        />
                    </div>
                    <div className="col-md-2">
                        <input
                            type="number"
                            name="price"
                            value={newBook.price}
                            onChange={handleChange}
                            placeholder="Price ($)"
                            className="form-control"
                            min="0"
                            step="0.01"
                        />
                    </div>
                    <div className="col-md-2">
                        <button
                            className="btn btn-success w-100"
                            onClick={handleAddBook}
                        >
                            Add Book
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Bookstore;



Challenge Yourself:


import React, { useState } from 'react';

const MusicStore = () => {
  const [inventory, setInventory] = useState([
    { id: 1, name: 'Acoustic Guitar', quantity: 10, price: 150 },
    { id: 2, name: 'Electric Keyboard', quantity: 5, price: 300 },
    { id: 3, name: 'Drum Set', quantity: 3, price: 500 },
  ]);

  const [newItem, setNewItem] = useState({ name: '', quantity: '', price: '' });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setNewItem({ ...newItem, [name]: value });
  };

  const handleAddItem = () => {
    const { name, quantity, price } = newItem;
    if (!name || !quantity || !price) {
      alert('Please fill in all fields');
      return;
    }

    const newEntry = {
      id: Math.max(...inventory.map((item) => item.id)) + 1,
      name,
      quantity: parseInt(quantity, 10),
      price: parseFloat(price),
    };

    setInventory([...inventory, newEntry]);
    setNewItem({ name: '', quantity: '', price: '' });
  };

  return (
    <div className="container my-4">
      <h2 className="text-center text-warning mb-4">Music Store Inventory</h2>

      <table className="table table-bordered table-hover shadow-sm">
        <thead className="table-warning">
          <tr>
            <th>ID</th>
            <th>Instrument / Album</th>
            <th>Quantity</th>
            <th>Price ($)</th>
          </tr>
        </thead>
        <tbody>
          {inventory.map((item) => (
            <tr key={item.id}>
              <td>{item.id}</td>
              <td>{item.name}</td>
              <td>{item.quantity}</td>
              <td>${item.price.toFixed(2)}</td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="card p-3 shadow-sm">
        <div className="row g-2">
          <div className="col-md-4">
            <input
              type="text"
              name="name"
              value={newItem.name}
              onChange={handleChange}
              placeholder="Instrument / Album Name"
              className="form-control"
            />
          </div>
          <div className="col-md-3">
            <input
              type="number"
              name="quantity"
              value={newItem.quantity}
              onChange={handleChange}
              placeholder="Quantity"
              className="form-control"
              min="0"
            />
          </div>
          <div className="col-md-3">
            <input
              type="number"
              name="price"
              value={newItem.price}
              onChange={handleChange}
              placeholder="Price ($)"
              className="form-control"
              min="0"
              step="0.01"
            />
          </div>
          <div className="col-md-2">
            <button
              className="btn btn-warning w-100 fw-bold"
              onClick={handleAddItem}
            >
              Add Item
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MusicStore;

